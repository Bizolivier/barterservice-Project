// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

namespace barterserv.Migrations
{
    [DbContext(typeof(BarterContext))]
    [Migration("20210715083827_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<string>("Nickname")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Sexe")
                        .HasColumnType("int");

                    b.Property<int>("TimeCredit")
                        .HasColumnType("int");

                    b.HasKey("Nickname");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Nickname = "ben",
                            Email = "ben@gmail.com",
                            Name = "Penelle",
                            Password = "ben",
                            Role = 0,
                            Sexe = 1,
                            TimeCredit = 5
                        },
                        new
                        {
                            Nickname = "bru",
                            Email = "bruno@gmail.com",
                            Name = "Lacroix",
                            Password = "bruno",
                            Role = 0,
                            Sexe = 1,
                            TimeCredit = 5
                        },
                        new
                        {
                            Nickname = "aela",
                            Email = "aela@gmail.com",
                            Name = "Izere",
                            Password = "aela",
                            Role = 0,
                            Sexe = 0,
                            TimeCredit = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
